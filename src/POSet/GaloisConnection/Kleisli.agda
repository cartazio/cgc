module POSet.GaloisConnection.Kleisli where

open import Prelude
open import POSet.POSet
open import POSet.Fun
open import POSet.Power
open import POSet.Product
open import POSet.Lib
open import POSet.ProofMode
open import POSet.PowerMonad

open import POSet.GaloisConnection.Classical

infixr 4 _РЄёрхљ_
record _РЄёрхљ_ {­ЮЊЂ} (A B : POSet ­ЮЊЂ) : Set (suc╦А ­ЮЊЂ) where
  field
    ╬▒рхљ[_] : РЪф A РЄњ ­ЮњФ B РЪФ
    ╬│рхљ[_] : РЪф B РЄњ ­ЮњФ A РЪФ
    expansiveрхљ[_] : return РіЉ ╬│рхљ[_] РЪљ ╬▒рхљ[_]
    contractiveрхљ[_] : ╬▒рхљ[_] РЪљ ╬│рхљ[_] РіЉ return
open _РЄёрхљ_ public

expansiveРєћsoundрхљ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} {╬▒ : РЪф A РЄњ ­ЮњФ B РЪФ} {╬│ : РЪф B РЄњ ­ЮњФ A РЪФ} Рєњ return РіЉ ╬│ РЪљ ╬▒ Рєћ (Рѕђ {x} Рєњ x РІ┐ ╬│ * РІЁ (╬▒ РІЁ x))
expansiveРєћsoundрхљ {A = A} {B} {╬▒} {╬│} = LHS , RHS
  where
    LHS : return РіЉ ╬│ РЪљ ╬▒ Рєњ Рѕђ {x} Рєњ x РІ┐ ╬│ * РІЁ (╬▒ РІЁ x)
    LHS expansive = ¤ђРѓЂ returnРєћРІ┐ $ res-f[РЄњ]РИбРіЉРИБ expansive
    RHS : (Рѕђ {x} Рєњ x РІ┐ ╬│ * РІЁ (╬▒ РІЁ x)) Рєњ return РіЉ ╬│ РЪљ ╬▒
    RHS sound = ext[РЄњ]РИбРіЉРИБ $ ¤ђРѓѓ returnРєћРІ┐ sound

contractiveРєћcompleteрхљ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} {╬▒ : РЪф A РЄњ ­ЮњФ B РЪФ} {╬│ : РЪф B РЄњ ­ЮњФ A РЪФ} Рєњ ╬▒ РЪљ ╬│ РіЉ return Рєћ (Рѕђ {xРЎ» yРЎ»} Рєњ yРЎ» РІ┐ ╬▒ * РІЁ (╬│ РІЁ xРЎ») Рєњ yРЎ» РіЉ xРЎ»)
contractiveРєћcompleteрхљ {A = A} {B} {╬▒} {╬│} = LHS , RHS
  where
    LHS : ╬▒ РЪљ ╬│ РіЉ return Рєњ Рѕђ {xРЎ» yРЎ»} Рєњ yРЎ» РІ┐ ╬▒ * РІЁ (╬│ РІЁ xРЎ») Рєњ yРЎ» РіЉ xРЎ»
    LHS contractive xРЎ»Рѕѕ╬▒[╬│[yРЎ»]] = ¤ђРѓЂ returnРєћРІ┐ $ res-f[РЄњ]РИбРіЉРИБ contractive РїЙ ¤ђРѓѓ returnРєћРІ┐ xРЎ»Рѕѕ╬▒[╬│[yРЎ»]]

    RHS : (Рѕђ {xРЎ» yРЎ»} Рєњ yРЎ» РІ┐ ╬▒ * РІЁ (╬│ РІЁ xРЎ») Рєњ yРЎ» РіЉ xРЎ») Рєњ ╬▒ РЪљ ╬│ РіЉ return
    RHS complete = ext[РЄњ]РИбРіЉРИБ $ ext[­ЮњФ]РИбРіЉРИБ $ complete

soundрхљ[_] : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} (AРЄёB : A РЄёрхљ B) Рєњ Рѕђ {x} Рєњ x РІ┐ ╬│рхљ[ AРЄёB ] * РІЁ (╬▒рхљ[ AРЄёB ] РІЁ x)
soundрхљ[ AРЄёB ] = ¤ђРѓЂ expansiveРєћsoundрхљ expansiveрхљ[ AРЄёB ]

completeрхљ[_] : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} (AРЄёB : A РЄёрхљ B) Рєњ Рѕђ {xРЎ» yРЎ»} Рєњ yРЎ» РІ┐ ╬▒рхљ[ AРЄёB ] * РІЁ (╬│рхљ[ AРЄёB ] РІЁ xРЎ») Рєњ yРЎ» РіЉ xРЎ»
completeрхљ[ AРЄёB ] = ¤ђРѓЂ contractiveРєћcompleteрхљ contractiveрхљ[ AРЄёB ]

left-unit-expansive[РЪљ]рхљ[_] : Рѕђ {­ЮЊЂ} {A BРѓЂ BРѓѓ : POSet ­ЮЊЂ} (РЄёBРЄё : BРѓЂ РЄёрхљ BРѓѓ) {f : РЪф A РЄњ ­ЮњФ BРѓЂ РЪФ} Рєњ f РіЉ (╬│рхљ[ РЄёBРЄё ] РЪљ ╬▒рхљ[ РЄёBРЄё ]) РЪљ f
left-unit-expansive[РЪљ]рхљ[ РЄёBРЄё ] {f} = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
  do [[ f ]]
   РђБ РЪЁ РЌЄ left-unit[РЪљ] РЪєРИбРЅѕРИБ
   РђБ [[ return РЪљ f ]]
   РђБ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ f ] РЪЁ expansiveрхљ[ РЄёBРЄё ] РЪє
   РђБ [[ (╬│рхљ[ РЄёBРЄё ] РЪљ ╬▒рхљ[ РЄёBРЄё ]) РЪљ f ]]
   Рѕј

right-unit-expansive[РЪљ]рхљ[_] : Рѕђ {­ЮЊЂ} {AРѓЂ AРѓѓ B : POSet ­ЮЊЂ} (РЄёAРЄё : AРѓЂ РЄёрхљ AРѓѓ) {f : РЪф AРѓЂ РЄњ ­ЮњФ B РЪФ} Рєњ f РіЉ f РЪљ ╬│рхљ[ РЄёAРЄё ] РЪљ ╬▒рхљ[ РЄёAРЄё ]
right-unit-expansive[РЪљ]рхљ[ РЄёAРЄё ] {f} = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
  do [[ f ]]
   РђБ РЪЁ РЌЄ right-unit[РЪљ] РЪєРИбРЅѕРИБ
   РђБ [[ f РЪљ return ]]
   РђБ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ f ] РЪЁ expansiveрхљ[ РЄёAРЄё ] РЪє
   РђБ [[ f РЪљ ╬│рхљ[ РЄёAРЄё ] РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
   Рѕј

left-unit-contractive[РЪљ]рхљ[_] : Рѕђ {­ЮЊЂ} {A BРѓЂ BРѓѓ : POSet ­ЮЊЂ} (РЄёBРЄё : BРѓЂ РЄёрхљ BРѓѓ) {f : РЪф A РЄњ ­ЮњФ BРѓѓ РЪФ} Рєњ (╬▒рхљ[ РЄёBРЄё ] РЪљ ╬│рхљ[ РЄёBРЄё ]) РЪљ f РіЉ f
left-unit-contractive[РЪљ]рхљ[ РЄёBРЄё ] {f} = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
  do [[ (╬▒рхљ[ РЄёBРЄё ] РЪљ ╬│рхљ[ РЄёBРЄё ]) РЪљ f ]]
   РђБ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ f ] РЪЁ contractiveрхљ[ РЄёBРЄё ] РЪє
   РђБ [[ return РЪљ f ]]
   РђБ РЪЁ left-unit[РЪљ] РЪєРИбРЅѕРИБ
   РђБ [[ f ]]
   Рѕј

right-unit-contractive[РЪљ]рхљ[_] : Рѕђ {­ЮЊЂ} {AРѓЂ AРѓѓ B : POSet ­ЮЊЂ} (РЄёAРЄё : AРѓЂ РЄёрхљ AРѓѓ) {f : РЪф AРѓѓ РЄњ ­ЮњФ B РЪФ} Рєњ f РЪљ ╬▒рхљ[ РЄёAРЄё ] РЪљ ╬│рхљ[ РЄёAРЄё ] РіЉ f
right-unit-contractive[РЪљ]рхљ[ РЄёAРЄё ] {f} = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
  do [[ f РЪљ ╬▒рхљ[ РЄёAРЄё ] РЪљ ╬│рхљ[ РЄёAРЄё ] ]]
   РђБ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ f ] РЪЁ contractiveрхљ[ РЄёAРЄё ] РЪє
   РђБ [[ f РЪљ return ]]
   РђБ РЪЁ right-unit[РЪљ] РЪєРИбРЅѕРИБ
   РђБ [[ f ]]
   Рѕј

weaken[╬▒]рхљ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} (AРЄёBРѓЂ AРЄёBРѓѓ : A РЄёрхљ B) Рєњ ╬│рхљ[ AРЄёBРѓѓ ] РіЉ ╬│рхљ[ AРЄёBРѓЂ ] Рєњ ╬▒рхљ[ AРЄёBРѓЂ ] РіЉ ╬▒рхљ[ AРЄёBРѓѓ ]
weaken[╬▒]рхљ AРЄёBРѓЂ AРЄёBРѓѓ ╬│РѓѓРіЉ╬│РѓЂ = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
  do [[ ╬▒рхљ[ AРЄёBРѓЂ ] ]]
   РђБ РЪЁ right-unit-expansive[РЪљ]рхљ[ AРЄёBРѓѓ ] РЪє
   РђБ [[ ╬▒рхљ[ AРЄёBРѓЂ ] РЪљ ╬│рхљ[ AРЄёBРѓѓ ] РЪљ ╬▒рхљ[ AРЄёBРѓѓ ] ]]
   РђБ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ ╬▒рхљ[ AРЄёBРѓЂ ] ] $ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ ╬▒рхљ[ AРЄёBРѓѓ ] ] РЪЁ ╬│РѓѓРіЉ╬│РѓЂ РЪє
   РђБ [[ ╬▒рхљ[ AРЄёBРѓЂ ] РЪљ ╬│рхљ[ AРЄёBРѓЂ ] РЪљ ╬▒рхљ[ AРЄёBРѓѓ ] ]]
   РђБ РЪЁ РЌЄ associative[РЪљ] РЪєРИбРЅѕРИБ
   РђБ [[ (╬▒рхљ[ AРЄёBРѓЂ ] РЪљ ╬│рхљ[ AРЄёBРѓЂ ]) РЪљ ╬▒рхљ[ AРЄёBРѓѓ ] ]]
   РђБ РЪЁ left-unit-contractive[РЪљ]рхљ[ AРЄёBРѓЂ ] РЪє
   РђБ [[ ╬▒рхљ[ AРЄёBРѓѓ ] ]]
   Рѕј

unique[╬▒]рхљ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} (AРЄёBРѓЂ AРЄёBРѓѓ : A РЄёрхљ B) Рєњ ╬│рхљ[ AРЄёBРѓЂ ] РЅѕ ╬│рхљ[ AРЄёBРѓѓ ] Рєњ ╬▒рхљ[ AРЄёBРѓЂ ] РЅѕ ╬▒рхљ[ AРЄёBРѓѓ ]
unique[╬▒]рхљ AРЄёBРѓЂ AРЄёBРѓѓ ╬│РѓЂРЅѕ╬│Рѓѓ = РІѕ[] (weaken[╬▒]рхљ AРЄёBРѓЂ AРЄёBРѓѓ $ xRx[] $ РЌЄ ╬│РѓЂРЅѕ╬│Рѓѓ) (weaken[╬▒]рхљ AРЄёBРѓѓ AРЄёBРѓЂ $ xRx[] ╬│РѓЂРЅѕ╬│Рѓѓ)

weaken[╬│]рхљ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} (AРЄёBРѓЂ AРЄёBРѓѓ : A РЄёрхљ B) Рєњ ╬▒рхљ[ AРЄёBРѓѓ ] РіЉ ╬▒рхљ[ AРЄёBРѓЂ ] Рєњ ╬│рхљ[ AРЄёBРѓЂ ] РіЉ ╬│рхљ[ AРЄёBРѓѓ ]
weaken[╬│]рхљ AРЄёBРѓЂ AРЄёBРѓѓ ╬▒РѓѓРіЉ╬▒РѓЂ = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
  do [[ ╬│рхљ[ AРЄёBРѓЂ ] ]]
   РђБ РЪЁ left-unit-expansive[РЪљ]рхљ[ AРЄёBРѓѓ ] РЪє
   РђБ [[ (╬│рхљ[ AРЄёBРѓѓ ] РЪљ ╬▒рхљ[ AРЄёBРѓѓ ]) РЪљ ╬│рхљ[ AРЄёBРѓЂ ] ]]
   РђБ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ ╬│рхљ[ AРЄёBРѓЂ ] ] $ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ ╬│рхљ[ AРЄёBРѓѓ ] ] РЪЁ ╬▒РѓѓРіЉ╬▒РѓЂ РЪє
   РђБ [[ (╬│рхљ[ AРЄёBРѓѓ ] РЪљ ╬▒рхљ[ AРЄёBРѓЂ ]) РЪљ ╬│рхљ[ AРЄёBРѓЂ ] ]]
   РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
   РђБ [[ ╬│рхљ[ AРЄёBРѓѓ ] РЪљ ╬▒рхљ[ AРЄёBРѓЂ ] РЪљ ╬│рхљ[ AРЄёBРѓЂ ] ]]
   РђБ РЪЁ right-unit-contractive[РЪљ]рхљ[ AРЄёBРѓЂ ] РЪє
   РђБ [[ ╬│рхљ[ AРЄёBРѓѓ ] ]]
   Рѕј

unique[╬│]рхљ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} (AРЄёBРѓЂ AРЄёBРѓѓ : A РЄёрхљ B) Рєњ ╬▒рхљ[ AРЄёBРѓЂ ] РЅѕ ╬▒рхљ[ AРЄёBРѓѓ ] Рєњ ╬│рхљ[ AРЄёBРѓЂ ] РЅѕ ╬│рхљ[ AРЄёBРѓѓ ]
unique[╬│]рхљ AРЄёBРѓЂ AРЄёBРѓѓ ╬▒РѓЂРЅѕ╬▒Рѓѓ = РІѕ[] (weaken[╬│]рхљ AРЄёBРѓЂ AРЄёBРѓѓ $ xRx[] $ РЌЄ ╬▒РѓЂРЅѕ╬▒Рѓѓ) (weaken[╬│]рхљ AРЄёBРѓѓ AРЄёBРѓЂ $ xRx[] ╬▒РѓЂРЅѕ╬▒Рѓѓ)

infixr 9 _РїЙРИбРЄёрхљРИБ_
_РїЙРИбРЄёрхљРИБ_ : Рѕђ {­ЮЊЂ} {A B C : POSet ­ЮЊЂ} Рєњ B РЄёрхљ C Рєњ A РЄёрхљ B Рєњ A РЄёрхљ C
BРЄёC РїЙРИбРЄёрхљРИБ AРЄёB = record
  { ╬▒рхљ[_] = ╬▒рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ AРЄёB ]
  ; ╬│рхљ[_] = ╬│рхљ[ AРЄёB ] РЪљ ╬│рхљ[ BРЄёC ]
  ; expansiveрхљ[_] = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
      do [[ return ]]
       РђБ РЪЁ expansiveрхљ[ AРЄёB ] РЪє
       РђБ [[ ╬│рхљ[ AРЄёB ] РЪљ ╬▒рхљ[ AРЄёB ] ]]
       РђБ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ ╬▒рхљ[ AРЄёB ] ] begin
           do [[ ╬│рхљ[ AРЄёB ] ]]
            РђБ РЪЁ right-unit-expansive[РЪљ]рхљ[ BРЄёC ] РЪє
            РђБ [[ ╬│рхљ[ AРЄёB ] РЪљ (╬│рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ BРЄёC ]) ]]
            РђБ РЪЁ РЌЄ associative[РЪљ] РЪєРИбРЅѕРИБ
            РђБ [[ (╬│рхљ[ AРЄёB ] РЪљ ╬│рхљ[ BРЄёC ]) РЪљ ╬▒рхљ[ BРЄёC ] ]]
           end
       РђБ [[ ((╬│рхљ[ AРЄёB ] РЪљ ╬│рхљ[ BРЄёC ]) РЪљ ╬▒рхљ[ BРЄёC ]) РЪљ ╬▒рхљ[ AРЄёB ] ]]
       РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
       РђБ [[ (╬│рхљ[ AРЄёB ] РЪљ ╬│рхљ[ BРЄёC ]) РЪљ (╬▒рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ AРЄёB ]) ]]
       Рѕј
  ; contractiveрхљ[_] = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
      do [[ (╬▒рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ AРЄёB ]) РЪљ (╬│рхљ[ AРЄёB ] РЪљ ╬│рхљ[ BРЄёC ]) ]]
       РђБ РЪЁ РЌЄ associative[РЪљ] РЪєРИбРЅѕРИБ
       РђБ [[ ((╬▒рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ AРЄёB ]) РЪљ ╬│рхљ[ AРЄёB ]) РЪљ ╬│рхљ[ BРЄёC ] ]]
       РђБ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ ╬│рхљ[ BРЄёC ] ] begin
           do [[ (╬▒рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ AРЄёB ]) РЪљ ╬│рхљ[ AРЄёB ] ]]
            РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
            РђБ [[ ╬▒рхљ[ BРЄёC ] РЪљ ╬▒рхљ[ AРЄёB ] РЪљ ╬│рхљ[ AРЄёB ] ]]
            РђБ РЪЁ right-unit-contractive[РЪљ]рхљ[ AРЄёB ] РЪє
            РђБ [[ ╬▒рхљ[ BРЄёC ] ]]
           end
       РђБ [[ ╬▒рхљ[ BРЄёC ] РЪљ ╬│рхљ[ BРЄёC ] ]]
       РђБ РЪЁ contractiveрхљ[ BРЄёC ] РЪє
       РђБ [[ return ]]
       Рѕј
  }

infixr 4 _РЄњРИбРЄёрхљРИБ_
_РЄњРИбРЄёрхљРИБ_ : Рѕђ {­ЮЊЂ} {AРѓЂ AРѓѓ BРѓЂ BРѓѓ : POSet ­ЮЊЂ} Рєњ AРѓЂ РЄёрхљ AРѓѓ Рєњ BРѓЂ РЄёрхљ BРѓѓ Рєњ (AРѓЂ РЄњ ­ЮњФ BРѓЂ) РЄё (AРѓѓ РЄњ ­ЮњФ BРѓѓ)
_РЄњРИбРЄёрхљРИБ_ {AРѓЂ = AРѓЂ} {AРѓѓ} {BРѓЂ} {BРѓѓ} РЄёAРЄё РЄёBРЄё = record
  { ╬▒[_] = wrap[РЪљ] РІЁ ╬▒рхљ[ РЄёBРЄё ] РІЁ ╬│рхљ[ РЄёAРЄё ]
  ; ╬│[_] = wrap[РЪљ] РІЁ ╬│рхљ[ РЄёBРЄё ] РІЁ ╬▒рхљ[ РЄёAРЄё ]
  ; expansive[_] = ext[РЄњ]РИбРіЉРИБ $ ╬╗ {f} Рєњ let open ┬Д-ProofMode[РіЉ] in [proof-mode]
      do [[ f ]]
       РђБ РЪЁ left-unit-expansive[РЪљ]рхљ[ РЄёBРЄё ] РЪє
       РђБ [[ (╬│рхљ[ РЄёBРЄё ] РЪљ ╬▒рхљ[ РЄёBРЄё ]) РЪљ f ]]
       РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
       РђБ [[ ╬│рхљ[ РЄёBРЄё ] РЪљ ╬▒рхљ[ РЄёBРЄё ] РЪљ f ]]
       РђБ РЪЁ right-unit-expansive[РЪљ]рхљ[ РЄёAРЄё ] РЪє
       РђБ [[ (╬│рхљ[ РЄёBРЄё ] РЪљ ╬▒рхљ[ РЄёBРЄё ] РЪљ f) РЪљ ╬│рхљ[ РЄёAРЄё ] РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
       РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
       РђБ [[ ╬│рхљ[ РЄёBРЄё ] РЪљ (╬▒рхљ[ РЄёBРЄё ] РЪљ f) РЪљ ╬│рхљ[ РЄёAРЄё ] РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
       РђБ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ ╬│рхљ[ РЄёBРЄё ] ] begin
           do [[ (╬▒рхљ[ РЄёBРЄё ] РЪљ f) РЪљ ╬│рхљ[ РЄёAРЄё ] РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
            РђБ РЪЁ РЌЄ associative[РЪљ] РЪєРИбРЅѕРИБ
            РђБ [[ ((╬▒рхљ[ РЄёBРЄё ] РЪљ f) РЪљ ╬│рхљ[ РЄёAРЄё ]) РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
            РђБ [focus-left [РЪљ] ­ЮЉю­ЮЉЊ ╬▒рхљ[ РЄёAРЄё ] ] РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
            РђБ [[ (╬▒рхљ[ РЄёBРЄё ] РЪљ f РЪљ ╬│рхљ[ РЄёAРЄё ]) РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
           end
       РђБ [[ ╬│рхљ[ РЄёBРЄё ] РЪљ (╬▒рхљ[ РЄёBРЄё ] РЪљ f РЪљ ╬│рхљ[ РЄёAРЄё ]) РЪљ ╬▒рхљ[ РЄёAРЄё ] ]]
       РђБ [[ (wrap[РЪљ] РІЁ ╬│рхљ[ РЄёBРЄё ] РІЁ ╬▒рхљ[ РЄёAРЄё ] РіЎ wrap[РЪљ] РІЁ ╬▒рхљ[ РЄёBРЄё ] РІЁ ╬│рхљ[ РЄёAРЄё ]) РІЁ f ]]
       Рѕј
  ; contractive[_] = ext[РЄњ]РИбРіЉРИБ $ ╬╗ {f} Рєњ let open ┬Д-ProofMode[РіЉ] in [proof-mode]
      do [[ (wrap[РЪљ] РІЁ ╬▒рхљ[ РЄёBРЄё ] РІЁ ╬│рхљ[ РЄёAРЄё ] РіЎ wrap[РЪљ] РІЁ ╬│рхљ[ РЄёBРЄё ] РІЁ ╬▒рхљ[ РЄёAРЄё ]) РІЁ f ]]
       РђБ [[ ╬▒рхљ[ РЄёBРЄё ] РЪљ (╬│рхљ[ РЄёBРЄё ] РЪљ f РЪљ ╬▒рхљ[ РЄёAРЄё ]) РЪљ ╬│рхљ[ РЄёAРЄё ] ]]
       РђБ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ ╬▒рхљ[ РЄёBРЄё ] ] begin
           do [[ (╬│рхљ[ РЄёBРЄё ] РЪљ f РЪљ ╬▒рхљ[ РЄёAРЄё ]) РЪљ ╬│рхљ[ РЄёAРЄё ] ]]
            РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
            РђБ [[ ╬│рхљ[ РЄёBРЄё ] РЪљ (f РЪљ ╬▒рхљ[ РЄёAРЄё ]) РЪљ ╬│рхљ[ РЄёAРЄё ] ]]
            РђБ [focus-right [РЪљ] ­ЮЉю­ЮЉЊ ╬│рхљ[ РЄёBРЄё ] ] begin
                do [[ (f РЪљ ╬▒рхљ[ РЄёAРЄё ]) РЪљ ╬│рхљ[ РЄёAРЄё ] ]]
                 РђБ РЪЁ associative[РЪљ] РЪєРИбРЅѕРИБ
                 РђБ [[ f РЪљ ╬▒рхљ[ РЄёAРЄё ] РЪљ ╬│рхљ[ РЄёAРЄё ] ]]
                 РђБ РЪЁ right-unit-contractive[РЪљ]рхљ[ РЄёAРЄё ] РЪє
                 РђБ [[ f ]]
                end
           end
       РђБ [[ ╬▒рхљ[ РЄёBРЄё ] РЪљ ╬│рхљ[ РЄёBРЄё ] РЪљ f ]]
       РђБ РЪЁ РЌЄ associative[РЪљ] РЪєРИбРЅѕРИБ
       РђБ [[ (╬▒рхљ[ РЄёBРЄё ] РЪљ ╬│рхљ[ РЄёBРЄё ]) РЪљ f ]]
       РђБ РЪЁ left-unit-contractive[РЪљ]рхљ[ РЄёBРЄё ] РЪє
       РђБ [[ f ]]
       Рѕј
  }

-- infixr 4 _╬▒РЄё╬│рхљРИбРєЉРИБ_
-- record _╬▒РЄё╬│рхљРИбРєЉРИБ_ {­ЮЊЂ} (A B : Set ­ЮЊЂ) {{A-PO : PreOrder ­ЮЊЂ A}} {{B-PO : PreOrder ­ЮЊЂ B}} : Set (suc╦А ­ЮЊЂ) where
--   field
--     ╬▒рхљРИбРєЉРИБ : A Рєњ B Рєњ Set ­ЮЊЂ
--     monotonic[╬▒рхљРИбРєЉРИБ] : proper (_Рі┤_ РЄЅ _Ріх_ РЄЅ [Рєњ]) ╬▒рхљРИбРєЉРИБ
--     ╬│рхљРИбРєЉРИБ : B Рєњ A Рєњ Set ­ЮЊЂ
--     monotonic[╬│рхљРИбРєЉРИБ] : proper (_Рі┤_ РЄЅ _Ріх_ РЄЅ [Рєњ]) ╬│рхљРИбРєЉРИБ
--     sound[╬▒╬│рхљ]РИбРєЉРИБ : Рѕђ {x : A} Рєњ РѕЃ x^ ­ЮЉа­ЮЉА ╬▒рхљРИбРєЉРИБ x x^ ├Ќ ╬│рхљРИбРєЉРИБ x^ x
--     complete[╬▒╬│рхљ]РИбРєЉРИБ : Рѕђ {xРѓЂ^ xРѓѓ^ x} Рєњ ╬│рхљРИбРєЉРИБ xРѓЂ^ x Рєњ ╬▒рхљРИбРєЉРИБ x xРѓѓ^ Рєњ xРѓѓ^ Рі┤ xРѓЂ^
-- 
-- mk[╬▒РЄё╬│рхљ]РИбРєЉРИБ :
--   Рѕђ {­ЮЊЂ} {A B : Set ­ЮЊЂ}
--     {{A-PO : PreOrder ­ЮЊЂ A}} {{A-REX : Reflexive (_Рі┤_ {A = A})}}
--     {{B-PO : PreOrder ­ЮЊЂ B}} {{B-REX : Reflexive (_Рі┤_ {A = B})}}
--   Рєњ A ╬▒РЄё╬│рхљРИбРєЉРИБ B Рєњ РЄД A ╬▒РЄё╬│рхљ РЄД B
-- mk[╬▒РЄё╬│рхљ]РИбРєЉРИБ {A = A} {B} AРЄёB = record
--   { ╬▒рхљ[_] = ╬▒
--   ; ╬│рхљ[_] = ╬│
--   ; expansiveрхљ[_] = ¤ђРѓѓ expansiveРєћsoundрхљ $ ╬╗ {x} Рєњ sound {x}
--   ; contractiveрхљ[_] = ¤ђРѓѓ contractiveРєћcompleteрхљ complete
--   }
--   where
--     open _╬▒РЄё╬│рхљРИбРєЉРИБ_ AРЄёB
--     ╬▒ : РЪф РЄД A РЄњ ­ЮњФ (РЄД B) РЪФ
--     ╬▒ = witness-x (curryРИб╬╗РєЉРИБ idРИб¤ЅРєЉРИБ) $ mk[witness] ╬▒рхљРИбРєЉРИБ monotonic[╬▒рхљРИбРєЉРИБ]
--     ╬│ : РЪф РЄД B РЄњ ­ЮњФ (РЄД A) РЪФ
--     ╬│ = witness-x (curryРИб╬╗РєЉРИБ idРИб¤ЅРєЉРИБ) $ mk[witness] ╬│рхљРИбРєЉРИБ monotonic[╬│рхљРИбРєЉРИБ]
--     sound : Рѕђ {x} Рєњ x РІ┐ ╬│ * РІЁ (╬▒ РІЁ x)
--     sound {РєЉРЪе x РЪЕ} with sound[╬▒╬│рхљ]РИбРєЉРИБ {x}
--     ... | РѕЃ x^ ,, x^Рѕѕ╬▒[x] , xРѕѕ╬│[x^]  = РѕЃ­ЮњФ РєЉ x^ ,, x^Рѕѕ╬▒[x] ,, xРѕѕ╬│[x^]
--     complete : Рѕђ {x^ y^} Рєњ x^ РІ┐ ╬▒ * РІЁ (╬│ РІЁ y^) Рєњ x^ РіЉ y^
--     complete (РѕЃ­ЮњФ x ,, xРѕѕ╬│[x^] ,, y^Рѕѕ╬▒[x]) = intro[РіЉ]РИбРєЊРИБ $ complete[╬▒╬│рхљ]РИбРєЉРИБ xРѕѕ╬│[x^] y^Рѕѕ╬▒[x]
-- 
-- xRxРИб╬▒РЄё╬│рхљРИБ : Рѕђ {­ЮЊЂ} {A : POSet ­ЮЊЂ} Рєњ A ╬▒РЄё╬│рхљ A
-- xRxРИб╬▒РЄё╬│рхљРИБ = record
--   { ╬▒рхљ[_] = return
--   ; ╬│рхљ[_] = return
--   ; expansiveрхљ[_] = xRx[] $ РЌЄ left-unit[РЪљ]
--   ; contractiveрхљ[_] = xRx[] left-unit[РЪљ]
--   }
-- 
-- ╬▒РЄё╬│рхљРєњ╬▒РЄё╬│ : Рѕђ {­ЮЊЂ} {A B : POSet ­ЮЊЂ} Рєњ A ╬▒РЄё╬│рхљ B Рєњ ­ЮњФ A ╬▒РЄё╬│ ­ЮњФ B
-- ╬▒РЄё╬│рхљРєњ╬▒РЄё╬│ AРЄёB = record
--   { ╬▒[_] = ╬▒рхљ[ AРЄёB ] *
--   ; ╬│[_] = ╬│рхљ[ AРЄёB ] *
--   ; expansive[_] = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
--       do [[ idрхњ ]]
--        РђБ РЪЁ РЌЄ left-unit[*]РИбextРИБ РЪєРИбРЅѕРИБ
--        РђБ [[ return * ]]
--        РђБ [focus-in [*] ] РЪЁ expansiveрхљ[ AРЄёB ] РЪє
--        РђБ [[ (╬│рхљ[ AРЄёB ] РЪљ ╬▒рхљ[ AРЄёB ]) * ]]
--        РђБ РЪЁ associative[РЪљ]РИбРіЎРИБ РЪєРИбРЅѕРИБ
--        РђБ [[ ╬│рхљ[ AРЄёB ] * РіЎ ╬▒рхљ[ AРЄёB ] * ]]
--        Рѕј
--   ; contractive[_] = let open ┬Д-ProofMode[РіЉ] in [proof-mode]
--       do [[ ╬▒рхљ[ AРЄёB ] * РіЎ ╬│рхљ[ AРЄёB ] * ]]
--        РђБ РЪЁ РЌЄ associative[РЪљ]РИбРіЎРИБ РЪєРИбРЅѕРИБ
--        РђБ [[ (╬▒рхљ[ AРЄёB ] РЪљ ╬│рхљ[ AРЄёB ]) * ]]
--        РђБ [focus-in [*] ] РЪЁ contractiveрхљ[ AРЄёB ] РЪє
--        РђБ [[ return * ]]
--        РђБ РЪЁ left-unit[*]РИбextРИБ РЪєРИбРЅѕРИБ
--        РђБ [[ idрхњ ]]
--        Рѕј
--   }
-- 
-- _├ЌРИб╬▒РЄё╬│рхљРИБ_ : Рѕђ {­ЮЊЂ} {AРѓЂ AРѓѓ BРѓЂ BРѓѓ : POSet ­ЮЊЂ} Рєњ AРѓЂ ╬▒РЄё╬│рхљ BРѓЂ Рєњ AРѓѓ ╬▒РЄё╬│рхљ BРѓѓ Рєњ (AРѓЂ РЪе├ЌРЪЕ AРѓѓ) ╬▒РЄё╬│рхљ (BРѓЂ РЪе├ЌРЪЕ BРѓѓ)
-- _├ЌРИб╬▒РЄё╬│рхљРИБ_ {­ЮЊЂ} {AРѓЂ} {AРѓѓ} {BРѓЂ} {BРѓѓ} AРѓЂРЄёBРѓЂ AРѓѓРЄёBРѓѓ = mk[╬▒РЄё╬│рхљ]РИбРєЉРИБ $ record
--   { ╬▒рхљРИбРєЉРИБ = ╬▒
--   ; monotonic[╬▒рхљРИбРєЉРИБ] = monotonic[╬▒]
--   ; ╬│рхљРИбРєЉРИБ = ╬│
--   ; monotonic[╬│рхљРИбРєЉРИБ] = monotonic[╬│]
--   ; sound[╬▒╬│рхљ]РИбРєЉРИБ = sound
--   ; complete[╬▒╬│рхљ]РИбРєЉРИБ = complete
--   }
--   where
--     ╬▒ : prod AРѓЂ AРѓѓ Рєњ prod BРѓЂ BРѓѓ Рєњ Set ­ЮЊЂ
--     ╬▒ (x , y) (x^ , y^) = (x^ РІ┐ ╬▒рхљ[ AРѓЂРЄёBРѓЂ ] РІЁ x) ├Ќ (y^ РІ┐ ╬▒рхљ[ AРѓѓРЄёBРѓѓ ] РІЁ y)
--     abstract
--       monotonic[╬▒] : proper (_Рі┤_ РЄЅ _Ріх_ РЄЅ [Рєњ]) ╬▒
--       monotonic[╬▒] (xРѓЂРіЉxРѓѓ , yРѓЂРіЉyРѓѓ) (xРѓЂ^РіњxРѓѓ^ , yРѓЂ^РіњyРѓѓ^) (xРѓЂ^Рѕѕ╬▒[xРѓЂ] , yРѓЂ^Рѕѕ╬▒[yРѓЂ]) =
--           res-X-x[¤Ѕ]РИбРіЉРИБ (res-x[╬╗]РИбРіЉРИБ {f = ╬▒рхљ[ AРѓЂРЄёBРѓЂ ]} xРѓЂРіЉxРѓѓ) xРѓЂ^РіњxРѓѓ^ xРѓЂ^Рѕѕ╬▒[xРѓЂ]
--         , res-X-x[¤Ѕ]РИбРіЉРИБ (res-x[╬╗]РИбРіЉРИБ {f = ╬▒рхљ[ AРѓѓРЄёBРѓѓ ]} yРѓЂРіЉyРѓѓ) yРѓЂ^РіњyРѓѓ^ yРѓЂ^Рѕѕ╬▒[yРѓЂ]
--     ╬│ : prod BРѓЂ BРѓѓ Рєњ prod AРѓЂ AРѓѓ Рєњ Set ­ЮЊЂ
--     ╬│ (x^ , y^) (x , y) = (x РІ┐ ╬│рхљ[ AРѓЂРЄёBРѓЂ ] РІЁ x^) ├Ќ (y РІ┐ ╬│рхљ[ AРѓѓРЄёBРѓѓ ] РІЁ y^)
--     abstract
--       monotonic[╬│] : proper (_Рі┤_ РЄЅ _Ріх_ РЄЅ [Рєњ]) ╬│
--       monotonic[╬│] (xРѓЂ^РіЉxРѓѓ^ , yРѓЂ^РіЉyРѓѓ^) (xРѓЂРіњxРѓѓ , yРѓЂРіњyРѓѓ) (xРѓЂРѕѕ╬│[xРѓЂ^] , yРѓЂРѕѕ╬│[yРѓЂ^]) =
--           res-X-x[¤Ѕ]РИбРіЉРИБ (res-x[╬╗]РИбРіЉРИБ {f = ╬│рхљ[ AРѓЂРЄёBРѓЂ ]} xРѓЂ^РіЉxРѓѓ^) xРѓЂРіњxРѓѓ xРѓЂРѕѕ╬│[xРѓЂ^]
--         , res-X-x[¤Ѕ]РИбРіЉРИБ (res-x[╬╗]РИбРіЉРИБ {f = ╬│рхљ[ AРѓѓРЄёBРѓѓ ]} yРѓЂ^РіЉyРѓѓ^) yРѓЂРіњyРѓѓ yРѓЂРѕѕ╬│[yРѓЂ^]
--     sound : Рѕђ {xy : prod AРѓЂ AРѓѓ} Рєњ РѕЃ xy^ ­ЮЉа­ЮЉА ╬▒ xy xy^ ├Ќ ╬│ xy^ xy
--     sound {x , y} with soundрхљ[ AРѓЂРЄёBРѓЂ ] {x} | soundрхљ[ AРѓѓРЄёBРѓѓ ] {y}
--     ... | РѕЃ­ЮњФ x^ ,, x^Рѕѕ╬▒[x] ,, xРѕѕ╬│[x^] | РѕЃ­ЮњФ y^ ,, yРѕѕ╬▒[y^] ,, y^Рѕѕ╬│[y] = РѕЃ (x^ , y^) ,, (x^Рѕѕ╬▒[x] , yРѕѕ╬▒[y^]) , (xРѕѕ╬│[x^] , y^Рѕѕ╬│[y])
--     complete : Рѕђ {xyРѓЂ^ xyРѓѓ^ : prod BРѓЂ BРѓѓ} {xy : prod AРѓЂ AРѓѓ} Рєњ ╬│ xyРѓЂ^ xy Рєњ ╬▒ xy xyРѓѓ^ Рєњ xyРѓѓ^ Рі┤ xyРѓЂ^
--     complete {xРѓЂ^ , yРѓЂ^} {xРѓѓ^ , yРѓѓ^} {x , y} (xРѕѕ╬│[xРѓЂ^] , yРѕѕ╬│[yРѓЂ^]) (xРѓѓ^Рѕѕ╬▒[x] , yРѓѓ^Рѕѕ╬▒[y]) =
--         (completeрхљ[ AРѓЂРЄёBРѓЂ ] $ РѕЃ­ЮњФ x ,, xРѕѕ╬│[xРѓЂ^] ,, xРѓѓ^Рѕѕ╬▒[x])
--       , (completeрхљ[ AРѓѓРЄёBРѓѓ ] $ РѕЃ­ЮњФ y ,, yРѕѕ╬│[yРѓЂ^] ,, yРѓѓ^Рѕѕ╬▒[y])
